[{"/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/index.js":"1","/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/reportWebVitals.js":"2","/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/App.js":"3","/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/components/Form.jsx":"4","/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/components/Box.jsx":"5"},{"size":500,"mtime":1610143855144,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610143855145,"results":"8","hashOfConfig":"7"},{"size":655,"mtime":1610312036905,"results":"9","hashOfConfig":"7"},{"size":868,"mtime":1610311863341,"results":"10","hashOfConfig":"7"},{"size":454,"mtime":1610311651793,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1outfc7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/index.js",[],["25","26"],"/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/reportWebVitals.js",[],"/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/App.js",[],"/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/components/Form.jsx",["27"],"import React, {useState} from 'react';\n\nconst styling = {\n  background: \"red\"\n}\n\nconst Form = (props) => {\n  const [input, setInput] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setInput(value)\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.addColor(input) // when submitting form, use the onNewColor function prop to pass input up to App\n    setInput(\"\")\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <div className=\"form-group row\">\n        <label htmlFor=\"colFormLabelSm\" className=\"col-sm-2 col-form-label col-form-label-sm\">Color: </label>\n          <input type=\"text\" className=\"form-control form-control-sm\" id=\"colFormLabelSm\"  name=\"color\" onChange= { handleChange } value={ input }/>\n      </div>\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default Form;","/Users/tiffanychan/Desktop/CodingDojo/MERN/React/box_generator_app/src/components/Box.jsx",["28"],"import React, {useState} from 'react';\n\n//{words.map( (word, index) => <li className={styles.listItem} key={ index }>{ word }</li> )}\n\nconst Box = props => {\n // map box array\n  const {color} = props;\n\n  return (<div className=\"box\" style={{backgroundColor: color, display: \"inline-block\", width: 50, height: 50, marginRight: 10}}></div>)\n\n};\n\n// {\n//   hasBeenSubmitted ?\n//   <div className=\"box\" style={ styling }></div> : \"\"\n// }\n\nexport default Box;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":3,"column":7,"nodeType":"35","messageId":"36","endLine":3,"endColumn":14},{"ruleId":"33","severity":1,"message":"37","line":1,"column":16,"nodeType":"35","messageId":"36","endLine":1,"endColumn":24},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'styling' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]